{
"/Users/nick/proj/threadtime/threadtime-server/dist/src/index.ts":{"path":"/Users/nick/proj/threadtime/threadtime-server/dist/src/index.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":22}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}}},"fnMap":{},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"code":"export * from './app';\nexport * from './client';\nexport * from './collection_map';\nexport * from './errors';\n\nexport * from './objs';","l":{"1":1,"2":1,"3":1,"4":1,"6":1}},
"/Users/nick/proj/threadtime/threadtime-server/dist/src/app.ts":{"path":"/Users/nick/proj/threadtime/threadtime-server/dist/src/app.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":99}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"10":{"start":{"line":14,"column":0},"end":{"line":112,"column":1}},"11":{"start":{"line":14,"column":25},"end":{"line":14,"column":37}},"12":{"start":{"line":28,"column":4},"end":{"line":55,"column":5}},"13":{"start":{"line":28,"column":16},"end":{"line":28,"column":54}},"14":{"start":{"line":28,"column":56},"end":{"line":28,"column":126}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":16}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":25}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"18":{"start":{"line":33,"column":8},"end":{"line":33,"column":40}},"19":{"start":{"line":34,"column":8},"end":{"line":34,"column":33}},"20":{"start":{"line":35,"column":8},"end":{"line":35,"column":26}},"21":{"start":{"line":36,"column":8},"end":{"line":36,"column":30}},"22":{"start":{"line":39,"column":8},"end":{"line":41,"column":12}},"23":{"start":{"line":43,"column":8},"end":{"line":50,"column":11}},"24":{"start":{"line":45,"column":12},"end":{"line":45,"column":50}},"25":{"start":{"line":47,"column":12},"end":{"line":47,"column":38}},"26":{"start":{"line":49,"column":12},"end":{"line":49,"column":27}},"27":{"start":{"line":52,"column":8},"end":{"line":54,"column":11}},"28":{"start":{"line":53,"column":12},"end":{"line":53,"column":41}},"29":{"start":{"line":58,"column":4},"end":{"line":90,"column":5}},"30":{"start":{"line":58,"column":10},"end":{"line":58,"column":46}},"31":{"start":{"line":59,"column":8},"end":{"line":59,"column":78}},"32":{"start":{"line":60,"column":8},"end":{"line":89,"column":17}},"33":{"start":{"line":62,"column":16},"end":{"line":72,"column":19}},"34":{"start":{"line":63,"column":20},"end":{"line":66,"column":21}},"35":{"start":{"line":64,"column":24},"end":{"line":64,"column":44}},"36":{"start":{"line":65,"column":24},"end":{"line":65,"column":45}},"37":{"start":{"line":68,"column":20},"end":{"line":68,"column":57}},"38":{"start":{"line":69,"column":20},"end":{"line":69,"column":33}},"39":{"start":{"line":71,"column":20},"end":{"line":71,"column":31}},"40":{"start":{"line":75,"column":16},"end":{"line":75,"column":59}},"41":{"start":{"line":76,"column":16},"end":{"line":83,"column":29}},"42":{"start":{"line":77,"column":20},"end":{"line":77,"column":51}},"43":{"start":{"line":78,"column":20},"end":{"line":82,"column":23}},"44":{"start":{"line":79,"column":24},"end":{"line":79,"column":46}},"45":{"start":{"line":79,"column":32},"end":{"line":79,"column":46}},"46":{"start":{"line":80,"column":24},"end":{"line":80,"column":57}},"47":{"start":{"line":81,"column":24},"end":{"line":81,"column":35}},"48":{"start":{"line":85,"column":26},"end":{"line":88,"column":14}},"49":{"start":{"line":86,"column":16},"end":{"line":86,"column":63}},"50":{"start":{"line":87,"column":16},"end":{"line":87,"column":27}},"51":{"start":{"line":93,"column":4},"end":{"line":106,"column":5}},"52":{"start":{"line":93,"column":9},"end":{"line":93,"column":45}},"53":{"start":{"line":94,"column":8},"end":{"line":94,"column":24}},"54":{"start":{"line":95,"column":8},"end":{"line":105,"column":17}},"55":{"start":{"line":97,"column":16},"end":{"line":101,"column":17}},"56":{"start":{"line":98,"column":20},"end":{"line":98,"column":46}},"57":{"start":{"line":100,"column":20},"end":{"line":100,"column":31}},"58":{"start":{"line":103,"column":26},"end":{"line":103,"column":62}},"59":{"start":{"line":104,"column":28},"end":{"line":104,"column":61}},"60":{"start":{"line":104,"column":62},"end":{"line":104,"column":73}},"61":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"62":{"start":{"line":110,"column":8},"end":{"line":110,"column":53}},"63":{"start":{"line":15,"column":11},"end":{"line":15,"column":29}},"64":{"start":{"line":112,"column":0},"end":{"line":112,"column":1}},"65":{"start":{"line":14,"column":13},"end":{"line":112,"column":1}}},"fnMap":{"1":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"App","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":126}}},"3":{"name":"(anonymous_5)","line":43,"loc":{"start":{"line":43,"column":33},"end":{"line":43,"column":40}}},"4":{"name":"(anonymous_6)","line":52,"loc":{"start":{"line":52,"column":37},"end":{"line":52,"column":52}}},"5":{"name":"(anonymous_7)","line":58,"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":46}}},"6":{"name":"(anonymous_8)","line":58,"loc":{"start":{"line":58,"column":38},"end":{"line":58,"column":44}}},"7":{"name":"(anonymous_9)","line":61,"loc":{"start":{"line":61,"column":12},"end":{"line":61,"column":21}}},"8":{"name":"(anonymous_10)","line":62,"loc":{"start":{"line":62,"column":48},"end":{"line":62,"column":70}}},"9":{"name":"(anonymous_11)","line":74,"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":21}}},"10":{"name":"(anonymous_12)","line":76,"loc":{"start":{"line":76,"column":47},"end":{"line":76,"column":90}}},"11":{"name":"(anonymous_13)","line":78,"loc":{"start":{"line":78,"column":44},"end":{"line":78,"column":80}}},"12":{"name":"(anonymous_14)","line":85,"loc":{"start":{"line":85,"column":12},"end":{"line":85,"column":21}}},"13":{"name":"(anonymous_15)","line":85,"loc":{"start":{"line":85,"column":54},"end":{"line":null,"column":-1}}},"14":{"name":"(anonymous_16)","line":93,"loc":{"start":{"line":93,"column":4},"end":{"line":93,"column":45}}},"15":{"name":"(anonymous_17)","line":93,"loc":{"start":{"line":93,"column":37},"end":{"line":93,"column":43}}},"16":{"name":"(anonymous_18)","line":96,"loc":{"start":{"line":96,"column":12},"end":{"line":96,"column":21}}},"17":{"name":"(anonymous_19)","line":103,"loc":{"start":{"line":103,"column":12},"end":{"line":103,"column":21}}},"18":{"name":"(anonymous_20)","line":104,"loc":{"start":{"line":104,"column":12},"end":{"line":104,"column":21}}},"19":{"name":"(anonymous_21)","line":109,"loc":{"start":{"line":109,"column":4},"end":{"line":109,"column":31}}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":16},"end":{"line":28,"column":15}},{"start":{"line":28,"column":16},"end":{"line":28,"column":15}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":30},"end":{"line":28,"column":46}},{"start":{"line":28,"column":50},"end":{"line":28,"column":54}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":56},"end":{"line":28,"column":55}},{"start":{"line":28,"column":56},"end":{"line":28,"column":55}}]},"4":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":72},"end":{"line":28,"column":90}},{"start":{"line":28,"column":94},"end":{"line":28,"column":126}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":10},"end":{"line":58,"column":9}},{"start":{"line":58,"column":10},"end":{"line":58,"column":9}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":20},"end":{"line":63,"column":19}},{"start":{"line":63,"column":20},"end":{"line":63,"column":19}}]},"7":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":24},"end":{"line":79,"column":23}},{"start":{"line":79,"column":24},"end":{"line":79,"column":23}}]},"8":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":9},"end":{"line":93,"column":8}},{"start":{"line":93,"column":9},"end":{"line":93,"column":8}}]},"9":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":16},"end":{"line":97,"column":15}},{"start":{"line":97,"column":16},"end":{"line":97,"column":15}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":26,"11":1,"12":1,"13":44,"14":50,"15":25,"16":25,"17":25,"18":25,"19":25,"20":25,"21":25,"22":25,"23":25,"24":2,"25":2,"26":2,"27":25,"28":5,"29":21,"30":20,"31":20,"32":20,"33":20,"34":20,"35":0,"36":0,"37":20,"38":20,"39":20,"40":20,"41":20,"42":60,"43":60,"44":60,"45":0,"46":60,"47":60,"48":20,"49":20,"50":20,"51":21,"52":20,"53":20,"54":20,"55":20,"56":0,"57":20,"58":20,"59":20,"60":20,"61":1,"62":31,"63":1,"64":1,"65":1},"b":{"1":[19,6],"2":[19,19],"3":[25,0],"4":[25,25],"5":[0,20],"6":[0,20],"7":[0,60],"8":[0,20],"9":[0,20]},"f":{"1":1,"2":25,"3":2,"4":5,"5":20,"6":0,"7":20,"8":20,"9":20,"10":60,"11":60,"12":20,"13":20,"14":20,"15":0,"16":20,"17":20,"18":20,"19":31},"code":"import * as sio from 'socket.io';\nimport * as http from 'http';\nimport * as winston from 'winston';\nimport * as async from 'async';\nimport { MongoClient, Db as MongoDb, Collection as MongoCollection, MongoCallback } from 'mongodb';\nimport { EventEmitter } from 'events';\nimport * as _ from 'lodash';\n\nimport { Client } from './client';\nimport { CollectionMap } from './collection_map';\n\nimport { ObjType } from '@threadtime/threadtime-common';\n\nexport class App extends EventEmitter {\n    static VERSION = '0.0.1';\n\n    public port: number;\n    public clients: Client[];\n    public log: winston.LoggerInstance;\n\n    public dbUri: string;\n    public db: MongoDb;\n    public collections: {[key: string]: MongoCollection};\n\n    private http: http.Server;\n    private io: SocketIO.Server;\n\n    constructor(port: number =process.env.PORT || 3000, dbUri: string = process.env.DB_URI || 'mongodb://localhost/threadtime') {\n        super();\n\n        this.port = port;\n        this.dbUri = dbUri;\n        this.http = http.createServer();\n        this.io = sio(this.http);\n        this.clients = [];\n        this.collections = {};\n\n        // Set up log\n        this.log = new winston.Logger({ transports: [\n            new winston.transports.Console({'timestamp': true}) \n        ]});\n\n        this.io.on('connection', (socket) => {\n            // Create new client\n            let client = new Client(this, socket);\n            // Add it to the clients list\n            this.clients.push(client);\n            // Start the client\n            client.start();\n        });\n\n        this.on('client_disconnect', (client: Client) => {\n            _.pull(this.clients, client);\n        });\n    }\n\n    // Start the server\n    start(done: (err?: any) => void = () => {}): void {\n        this.log.info(`Threadtime Server version ${App.VERSION} starting...`);\n        async.series([\n            (callback) => { // Connect the database\n                MongoClient.connect(this.dbUri, (err: any, db: MongoDb) => {\n                    if(err) {\n                        this.log.error(err);\n                        return callback(err);\n                    }\n\n                    this.log.info('Database connected.');\n                    this.db = db;\n\n                    callback();\n                });\n            },\n            (callback) => {\n                this.log.info('Connecting collections...');\n                async.forEachOf(CollectionMap, (col: string, type: any, callback: Function) => {\n                    this.log.info(`    ${col}...`);\n                    this.db.collection(col, (err: any, mongocol: MongoCollection) => {\n                        if(err) callback(err);\n                        this.collections[col] = mongocol;\n                        callback();\n                    });\n                }, callback);\n            },\n            (callback) => this.http.listen(this.port, () => { // Open the HTTP server\n                this.log.info(`Now listening on ${this.port}`);\n                callback();\n            })\n        ], done);\n    }\n\n    // Stop the server\n    stop(done: (err?: any) => void = () => {}): void {\n        this.io.close(); // Stop the socket IO instance\n        async.series([\n            (callback) => { // Stop the HTTP server\n                if(this.http.listening) {\n                    this.http.close(callback);\n                } else {\n                    callback();\n                }\n            },\n            (callback) => this.db.close(true, callback as any), // Disconnect the DB\n            (callback) => { this.log.info('Server stopped.'); callback(); }\n        ], done);\n    }\n\n    // Easy shortcut for fetching a collection for a specific ObjType\n    collectionFor(type: ObjType): MongoCollection {\n        return this.collections[CollectionMap[type]];\n    }\n}","l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"14":26,"15":1,"28":50,"29":25,"31":25,"32":25,"33":25,"34":25,"35":25,"36":25,"39":25,"43":25,"45":2,"47":2,"49":2,"52":25,"53":5,"58":21,"59":20,"60":20,"62":20,"63":20,"64":0,"65":0,"68":20,"69":20,"71":20,"75":20,"76":20,"77":60,"78":60,"79":60,"80":60,"81":60,"85":20,"86":20,"87":20,"93":21,"94":20,"95":20,"97":20,"98":0,"100":20,"103":20,"104":20,"109":1,"110":31,"112":1}},
"/Users/nick/proj/threadtime/threadtime-server/dist/src/client.ts":{"path":"/Users/nick/proj/threadtime/threadtime-server/dist/src/client.ts","statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":152}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"3":{"start":{"line":6,"column":0},"end":{"line":68,"column":1}},"4":{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":31}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":29}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":49}},"9":{"start":{"line":20,"column":4},"end":{"line":53,"column":5}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":43}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":56}},"12":{"start":{"line":23,"column":43},"end":{"line":23,"column":54}},"13":{"start":{"line":26,"column":8},"end":{"line":50,"column":11}},"14":{"start":{"line":27,"column":12},"end":{"line":27,"column":71}},"15":{"start":{"line":28,"column":12},"end":{"line":28,"column":69}},"16":{"start":{"line":30,"column":12},"end":{"line":38,"column":13}},"17":{"start":{"line":31,"column":16},"end":{"line":31,"column":59}},"18":{"start":{"line":32,"column":16},"end":{"line":32,"column":61}},"19":{"start":{"line":33,"column":16},"end":{"line":33,"column":78}},"20":{"start":{"line":34,"column":16},"end":{"line":34,"column":92}},"21":{"start":{"line":35,"column":16},"end":{"line":35,"column":44}},"22":{"start":{"line":36,"column":16},"end":{"line":36,"column":28}},"23":{"start":{"line":37,"column":16},"end":{"line":37,"column":23}},"24":{"start":{"line":41,"column":12},"end":{"line":41,"column":54}},"25":{"start":{"line":44,"column":12},"end":{"line":44,"column":46}},"26":{"start":{"line":45,"column":12},"end":{"line":45,"column":39}},"27":{"start":{"line":46,"column":12},"end":{"line":46,"column":43}},"28":{"start":{"line":47,"column":12},"end":{"line":47,"column":39}},"29":{"start":{"line":52,"column":8},"end":{"line":52,"column":30}},"30":{"start":{"line":55,"column":4},"end":{"line":63,"column":5}},"31":{"start":{"line":55,"column":9},"end":{"line":55,"column":34}},"32":{"start":{"line":56,"column":8},"end":{"line":56,"column":47}},"33":{"start":{"line":56,"column":28},"end":{"line":56,"column":47}},"34":{"start":{"line":58,"column":8},"end":{"line":58,"column":43}},"35":{"start":{"line":59,"column":8},"end":{"line":59,"column":31}},"36":{"start":{"line":60,"column":8},"end":{"line":60,"column":59}},"37":{"start":{"line":60,"column":34},"end":{"line":60,"column":59}},"38":{"start":{"line":61,"column":8},"end":{"line":61,"column":49}},"39":{"start":{"line":62,"column":8},"end":{"line":62,"column":22}},"40":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"41":{"start":{"line":66,"column":8},"end":{"line":66,"column":79}},"42":{"start":{"line":68,"column":0},"end":{"line":68,"column":1}},"43":{"start":{"line":6,"column":13},"end":{"line":68,"column":1}}},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Client","line":14,"loc":{"start":{"line":14,"column":4},"end":{"line":14,"column":49}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":37},"end":{"line":23,"column":42}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":57},"end":{"line":26,"column":70}}},"6":{"name":"(anonymous_6)","line":55,"loc":{"start":{"line":55,"column":4},"end":{"line":55,"column":34}}},"7":{"name":"(anonymous_7)","line":55,"loc":{"start":{"line":55,"column":26},"end":{"line":55,"column":32}}},"8":{"name":"(anonymous_8)","line":65,"loc":{"start":{"line":65,"column":4},"end":{"line":65,"column":19}}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":11}},{"start":{"line":30,"column":12},"end":{"line":30,"column":11}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":9},"end":{"line":55,"column":8}},{"start":{"line":55,"column":9},"end":{"line":55,"column":8}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":7}},{"start":{"line":56,"column":8},"end":{"line":56,"column":7}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":7}},{"start":{"line":60,"column":8},"end":{"line":60,"column":7}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":7,"6":7,"7":7,"8":7,"9":8,"10":7,"11":7,"12":4,"13":7,"14":2,"15":2,"16":2,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":7,"30":1,"31":12,"32":7,"33":2,"34":5,"35":5,"36":5,"37":2,"38":5,"39":5,"40":1,"41":15,"42":1,"43":1},"b":{"1":[1,1],"2":[5,2],"3":[2,5],"4":[2,3]},"f":{"1":1,"2":7,"3":7,"4":4,"5":2,"6":7,"7":5,"8":15},"code":"import * as sio from 'socket.io';\n\nimport { Message, HandshakeMessage, PermanentDisconnectMessage, DisconnectMachineReason, MessageType, NetHandler } from '@threadtime/threadtime-common';\nimport { App } from './app';\n\nexport class Client {\n    private app: App; \n    private socket: SocketIO.Socket;\n\n    netHandler: NetHandler;\n    clientVersion: string | null;\n    connected: boolean = false;\n\n    constructor(app: App, socket: SocketIO.Socket) {\n        this.app = app;\n        this.socket = socket;\n        this.netHandler = new NetHandler(socket);\n    }\n\n    start(): void {\n        this.log('Starting connection...');\n        // Emit 'client_disconnect' event on disconnect\n        this.socket.on('disconnect', () => this.stop());\n\n        // Wait for handshake message\n        this.netHandler.onMessage(MessageType.Handshake, (msg: Message) => {\n            let handshakeMsg = new HandshakeMessage().encapsulate(msg);\n            this.log(`Received handshake v=${handshakeMsg.version}`);\n\n            if(handshakeMsg.version !== App.VERSION) {\n                this.log('Versions incompatible, kicking');\n                let dcMsg = new PermanentDisconnectMessage();\n                dcMsg.machineReason = DisconnectMachineReason.VersionMismatch;\n                dcMsg.humanReason = `Client-Server version mismatch (server ${App.VERSION}`;\n                this.netHandler.send(dcMsg);\n                this.stop();\n                return;\n            }\n\n            // Set client version in instance\n            this.clientVersion = handshakeMsg.version;\n\n            // Otherwise, reply back with handshake\n            let resp = new HandshakeMessage();\n            resp.version = App.VERSION;\n            resp.replyTo = handshakeMsg.id;\n            this.netHandler.send(resp);\n\n            // TODO Emit 'handshake' event\n        });\n\n        this.connected = true;\n    }\n\n    stop(done: Function = () => {}): void {\n        if(!this.connected) return done(false); // Don't 'disconnect' if already DC'd\n\n        this.log('Stopping connection...');\n        this.connected = false;\n        if(this.socket.connected) this.socket.disconnect();\n        this.app.emit('client_disconnect', this);\n        return done();\n    }\n\n    log(str: string): void {\n        this.app.log.info(`[${this.socket.client.conn.remoteAddress}] ${str}`);\n    }\n}","l":{"3":1,"4":1,"6":1,"12":7,"14":1,"15":7,"16":7,"17":7,"20":8,"21":7,"23":7,"26":7,"27":2,"28":2,"30":2,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"41":1,"44":1,"45":1,"46":1,"47":1,"52":7,"55":12,"56":7,"58":5,"59":5,"60":5,"61":5,"62":5,"65":1,"66":15,"68":1}},
"/Users/nick/proj/threadtime/threadtime-server/dist/src/collection_map.ts":{"path":"/Users/nick/proj/threadtime/threadtime-server/dist/src/collection_map.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}},"2":{"start":{"line":3,"column":13},"end":{"line":7,"column":2}}},"fnMap":{},"branchMap":{},"s":{"1":1,"2":1},"b":{},"f":{},"code":"import { ObjType } from '@threadtime/threadtime-common';\n\nexport const CollectionMap = {\n    [ObjType.Board]: 'boards',\n    [ObjType.User]: 'users',\n    [ObjType.Post]: 'posts'\n};\n","l":{"1":1,"3":1}},
"/Users/nick/proj/threadtime/threadtime-server/dist/src/errors.ts":{"path":"/Users/nick/proj/threadtime/threadtime-server/dist/src/errors.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":6,"column":1}},"2":{"start":{"line":1,"column":38},"end":{"line":1,"column":43}},"3":{"start":{"line":2,"column":4},"end":{"line":5,"column":5}},"4":{"start":{"line":3,"column":8},"end":{"line":3,"column":48}},"5":{"start":{"line":4,"column":8},"end":{"line":4,"column":39}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":1}},"7":{"start":{"line":1,"column":13},"end":{"line":6,"column":1}},"8":{"start":{"line":8,"column":0},"end":{"line":13,"column":1}},"9":{"start":{"line":8,"column":37},"end":{"line":8,"column":42}},"10":{"start":{"line":9,"column":4},"end":{"line":12,"column":5}},"11":{"start":{"line":10,"column":8},"end":{"line":10,"column":45}},"12":{"start":{"line":11,"column":8},"end":{"line":11,"column":38}},"13":{"start":{"line":13,"column":0},"end":{"line":13,"column":1}},"14":{"start":{"line":8,"column":13},"end":{"line":13,"column":1}}},"fnMap":{"1":{"name":"(anonymous_3)","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"ObjNotFoundError","line":2,"loc":{"start":{"line":2,"column":4},"end":{"line":2,"column":32}}},"3":{"name":"(anonymous_5)","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":null,"column":-1}}},"4":{"name":"ValidationError","line":9,"loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":32}}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":14},"end":{"line":3,"column":21}},{"start":{"line":3,"column":25},"end":{"line":3,"column":46}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":14},"end":{"line":10,"column":21}},{"start":{"line":10,"column":25},"end":{"line":10,"column":43}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{"1":[1,1],"2":[1,1]},"f":{"1":1,"2":1,"3":1,"4":1},"code":"export class ObjNotFoundError extends Error {\n    constructor(message?: string) {\n        super(message || 'obj not found in db');\n        this.name = 'ObjNotFoundError';\n    }\n}\n\nexport class ValidationError extends Error {\n    constructor(message?: string) {\n        super(message || 'validation error');\n        this.name = 'ValidationError';\n    }\n}","l":{"1":1,"2":1,"3":1,"4":1,"6":1,"8":1,"9":1,"10":1,"11":1,"13":1}},
"/Users/nick/proj/threadtime/threadtime-server/dist/src/objs/index.ts":{"path":"/Users/nick/proj/threadtime/threadtime-server/dist/src/objs/index.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":22}}},"fnMap":{},"branchMap":{},"s":{"1":1},"b":{},"f":{},"code":"export * from './obj';","l":{"1":1}},
"/Users/nick/proj/threadtime/threadtime-server/dist/src/objs/obj.ts":{"path":"/Users/nick/proj/threadtime/threadtime-server/dist/src/objs/obj.ts","statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":76}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":76}},"6":{"start":{"line":11,"column":0},"end":{"line":121,"column":1}},"7":{"start":{"line":26,"column":4},"end":{"line":40,"column":5}},"8":{"start":{"line":27,"column":8},"end":{"line":27,"column":23}},"9":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"10":{"start":{"line":30,"column":12},"end":{"line":30,"column":26}},"11":{"start":{"line":32,"column":12},"end":{"line":32,"column":65}},"12":{"start":{"line":35,"column":8},"end":{"line":35,"column":29}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":29}},"14":{"start":{"line":37,"column":8},"end":{"line":37,"column":50}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":60}},"16":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"17":{"start":{"line":43,"column":8},"end":{"line":43,"column":37}},"18":{"start":{"line":47,"column":8},"end":{"line":47,"column":52}},"19":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"20":{"start":{"line":51,"column":8},"end":{"line":51,"column":48}},"21":{"start":{"line":55,"column":8},"end":{"line":55,"column":32}},"22":{"start":{"line":58,"column":4},"end":{"line":62,"column":5}},"23":{"start":{"line":59,"column":8},"end":{"line":61,"column":11}},"24":{"start":{"line":60,"column":12},"end":{"line":60,"column":41}},"25":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"26":{"start":{"line":69,"column":8},"end":{"line":69,"column":41}},"27":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"28":{"start":{"line":77,"column":8},"end":{"line":77,"column":44}},"29":{"start":{"line":84,"column":4},"end":{"line":96,"column":5}},"30":{"start":{"line":85,"column":8},"end":{"line":95,"column":11}},"31":{"start":{"line":86,"column":12},"end":{"line":94,"column":43}},"32":{"start":{"line":87,"column":16},"end":{"line":87,"column":74}},"33":{"start":{"line":87,"column":36},"end":{"line":87,"column":74}},"34":{"start":{"line":88,"column":16},"end":{"line":88,"column":34}},"35":{"start":{"line":89,"column":16},"end":{"line":92,"column":19}},"36":{"start":{"line":90,"column":20},"end":{"line":90,"column":53}},"37":{"start":{"line":90,"column":46},"end":{"line":90,"column":53}},"38":{"start":{"line":91,"column":26},"end":{"line":91,"column":43}},"39":{"start":{"line":93,"column":16},"end":{"line":93,"column":26}},"40":{"start":{"line":94,"column":30},"end":{"line":94,"column":41}},"41":{"start":{"line":98,"column":4},"end":{"line":107,"column":5}},"42":{"start":{"line":99,"column":8},"end":{"line":99,"column":45}},"43":{"start":{"line":100,"column":8},"end":{"line":100,"column":76}},"44":{"start":{"line":102,"column":8},"end":{"line":106,"column":9}},"45":{"start":{"line":103,"column":12},"end":{"line":103,"column":49}},"46":{"start":{"line":105,"column":12},"end":{"line":105,"column":58}},"47":{"start":{"line":109,"column":4},"end":{"line":120,"column":5}},"48":{"start":{"line":110,"column":8},"end":{"line":119,"column":11}},"49":{"start":{"line":112,"column":12},"end":{"line":112,"column":45}},"50":{"start":{"line":113,"column":12},"end":{"line":113,"column":73}},"51":{"start":{"line":113,"column":36},"end":{"line":113,"column":73}},"52":{"start":{"line":115,"column":12},"end":{"line":115,"column":45}},"53":{"start":{"line":116,"column":12},"end":{"line":116,"column":79}},"54":{"start":{"line":116,"column":16},"end":{"line":116,"column":21}},"55":{"start":{"line":116,"column":55},"end":{"line":116,"column":79}},"56":{"start":{"line":118,"column":12},"end":{"line":118,"column":105}},"57":{"start":{"line":118,"column":94},"end":{"line":118,"column":103}},"58":{"start":{"line":121,"column":0},"end":{"line":121,"column":1}},"59":{"start":{"line":11,"column":13},"end":{"line":121,"column":1}}},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Obj","line":26,"loc":{"start":{"line":26,"column":4},"end":{"line":26,"column":37}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":4},"end":{"line":46,"column":29}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_6)","line":54,"loc":{"start":{"line":54,"column":4},"end":{"line":54,"column":22}}},"7":{"name":"(anonymous_7)","line":58,"loc":{"start":{"line":58,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_8)","line":59,"loc":{"start":{"line":59,"column":35},"end":{"line":59,"column":46}}},"9":{"name":"(anonymous_9)","line":68,"loc":{"start":{"line":68,"column":4},"end":{"line":68,"column":25}}},"10":{"name":"(anonymous_10)","line":76,"loc":{"start":{"line":76,"column":4},"end":{"line":76,"column":24}}},"11":{"name":"(anonymous_11)","line":84,"loc":{"start":{"line":84,"column":4},"end":{"line":null,"column":-1}}},"12":{"name":"(anonymous_12)","line":85,"loc":{"start":{"line":85,"column":33},"end":{"line":85,"column":49}}},"13":{"name":"(anonymous_13)","line":86,"loc":{"start":{"line":86,"column":74},"end":{"line":86,"column":89}}},"14":{"name":"(anonymous_14)","line":89,"loc":{"start":{"line":89,"column":31},"end":{"line":89,"column":53}}},"15":{"name":"(anonymous_15)","line":94,"loc":{"start":{"line":94,"column":21},"end":{"line":94,"column":25}}},"16":{"name":"(anonymous_16)","line":98,"loc":{"start":{"line":98,"column":4},"end":{"line":null,"column":-1}}},"17":{"name":"(anonymous_17)","line":109,"loc":{"start":{"line":109,"column":4},"end":{"line":null,"column":-1}}},"18":{"name":"(anonymous_18)","line":110,"loc":{"start":{"line":110,"column":33},"end":{"line":110,"column":49}}},"19":{"name":"(anonymous_19)","line":118,"loc":{"start":{"line":118,"column":88},"end":{"line":118,"column":93}}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":7}},{"start":{"line":29,"column":8},"end":{"line":29,"column":7}}]},"2":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":16},"end":{"line":87,"column":15}},{"start":{"line":87,"column":16},"end":{"line":87,"column":15}}]},"3":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":20},"end":{"line":90,"column":19}},{"start":{"line":90,"column":20},"end":{"line":90,"column":19}}]},"4":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":7}},{"start":{"line":102,"column":8},"end":{"line":102,"column":7}}]},"5":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":11}},{"start":{"line":113,"column":12},"end":{"line":113,"column":11}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":1,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"code":"// import { Promise } from 'es6-promise';\nimport * as mongodb from 'mongodb';\nimport * as shortid from 'shortid';\nimport * as _ from 'lodash';\nimport * as Joi from 'joi';\n\nimport { App, CollectionMap, ObjNotFoundError, ValidationError } from '../';\nimport { IObj, ObjType, ObjSchemaMap } from '@threadtime/threadtime-common';\n\n// Generic object class\nexport class Obj implements IObj {\n    private app: App;\n\n    public _id: string;\n    public owner_id: string;\n    public parent_ids: string[];\n    public time: number;\n\n    private collection: mongodb.Collection;\n\n    /**\n     * Represents an Obj in Threadtime, server-side.\n     * @param app Threadtime Server App instance\n     * @param id Threadtime Obj ID\n     */\n    constructor(app: App, id?: string) {\n        this.app = app;\n\n        if(typeof id === 'string') {\n            this._id = id;\n        } else {\n            this._id = `${ObjType.Generic}${shortid.generate()}`;\n        }\n\n        this.owner_id = null;\n        this.parent_ids = [];\n        this.time = Math.floor(Date.now() / 1000);\n\n        this.collection = this.app.collectionFor(this.type);\n    }\n\n    get type(): ObjType {\n        return parseInt(this._id[0]);\n    }\n\n    set type(objType: ObjType) {\n        this._id = `${objType}${this._id.slice(1)}`;\n    }\n\n    get owner(): Obj {\n        return new Obj(this.app, this.owner_id);\n    }\n\n    set owner(obj: Obj) {\n        this.owner_id = obj._id;\n    }\n\n    get parents(): Obj[] {\n        return this.parent_ids.map((id: string) => {\n            return new Obj(this.app, id);\n        });\n    }\n\n    /**\n     * Add a parent given an Obj\n     * @param parent Parent to add to the parents list\n     */\n    addParent(parent: Obj): void {\n        this.parent_ids.push(parent._id);\n    }\n\n    /**\n     * Remove a parent given an Obj\n     * @param parent Parent to remove from the parents list\n     */\n    rmParent(parent: Obj): void {\n        _.pull(this.parent_ids, parent._id);\n    }\n\n    /** Load the document from the relevant collection in the database\n     *\n     * @returns {Promise<void>|Promise} Promise resolved when document loaded, rejected on failure\n     */\n    load(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.collection.find({_id: this._id}).limit(1).toArray().then((docs: Object[]) => {\n                if(_.isEmpty(docs)) return reject(new ObjNotFoundError());\n                let doc = docs[0];\n                _.forEach(doc, (val: any, key: string) => {\n                    if(key.charAt(0) === '_') return; // Skip properties that begin with an underscore\n                    (<any>this)[key] = val;\n                });\n                resolve();\n            }).catch((err) => reject(err));\n        });\n    }\n\n    validate(): IObjValidation {\n        let schema = ObjSchemaMap[this.type];\n        let result = Joi.validate(this, schema.joi, { allowUnknown: true });\n\n        if(result.error === null) {\n            return { success: true, error: null }\n        } else {\n            return { success: false, error: result.error }\n        }\n    }\n\n    save(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            // Validate first\n            let validation = this.validate();\n            if(!validation.success) return reject(new ValidationError()); // TODO return with validation data\n\n            let doc: {[x: string]: any} = {};\n            for(let k of ObjSchemaMap[this.type].keys) doc[k] = (<any>this)[k];\n\n            return this.collection.updateOne({_id: this._id}, doc, {upsert: true}).then(() => resolve());\n        });\n    }\n}\n\nexport interface IObjValidation {\n    success: boolean,\n    error: Joi.ValidationError\n}","l":{"3":1,"4":1,"5":1,"7":1,"8":1,"11":1,"26":1,"27":0,"29":0,"30":0,"32":0,"35":0,"36":0,"37":0,"39":0,"42":1,"43":0,"47":0,"50":1,"51":0,"55":0,"58":1,"59":0,"60":0,"68":1,"69":0,"76":1,"77":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"93":0,"94":0,"98":1,"99":0,"100":0,"102":0,"103":0,"105":0,"109":1,"110":0,"112":0,"113":0,"115":0,"116":0,"118":0,"121":1}},
"/Users/nick/proj/threadtime/threadtime-server/dist/src/obj.ts":{"path":"/Users/nick/proj/threadtime/threadtime-server/dist/src/obj.ts","statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":61}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":76}},"6":{"start":{"line":13,"column":0},"end":{"line":123,"column":1}},"7":{"start":{"line":28,"column":4},"end":{"line":42,"column":5}},"8":{"start":{"line":29,"column":8},"end":{"line":29,"column":23}},"9":{"start":{"line":31,"column":8},"end":{"line":35,"column":9}},"10":{"start":{"line":32,"column":12},"end":{"line":32,"column":26}},"11":{"start":{"line":34,"column":12},"end":{"line":34,"column":65}},"12":{"start":{"line":37,"column":8},"end":{"line":37,"column":29}},"13":{"start":{"line":38,"column":8},"end":{"line":38,"column":29}},"14":{"start":{"line":39,"column":8},"end":{"line":39,"column":50}},"15":{"start":{"line":41,"column":8},"end":{"line":41,"column":60}},"16":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"17":{"start":{"line":45,"column":8},"end":{"line":45,"column":37}},"18":{"start":{"line":49,"column":8},"end":{"line":49,"column":52}},"19":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"20":{"start":{"line":53,"column":8},"end":{"line":53,"column":48}},"21":{"start":{"line":57,"column":8},"end":{"line":57,"column":32}},"22":{"start":{"line":60,"column":4},"end":{"line":64,"column":5}},"23":{"start":{"line":61,"column":8},"end":{"line":63,"column":11}},"24":{"start":{"line":62,"column":12},"end":{"line":62,"column":41}},"25":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"26":{"start":{"line":71,"column":8},"end":{"line":71,"column":41}},"27":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"28":{"start":{"line":79,"column":8},"end":{"line":79,"column":44}},"29":{"start":{"line":86,"column":4},"end":{"line":98,"column":5}},"30":{"start":{"line":87,"column":8},"end":{"line":97,"column":11}},"31":{"start":{"line":88,"column":12},"end":{"line":96,"column":43}},"32":{"start":{"line":89,"column":16},"end":{"line":89,"column":74}},"33":{"start":{"line":89,"column":36},"end":{"line":89,"column":74}},"34":{"start":{"line":90,"column":16},"end":{"line":90,"column":34}},"35":{"start":{"line":91,"column":16},"end":{"line":94,"column":19}},"36":{"start":{"line":92,"column":20},"end":{"line":92,"column":53}},"37":{"start":{"line":92,"column":46},"end":{"line":92,"column":53}},"38":{"start":{"line":93,"column":26},"end":{"line":93,"column":43}},"39":{"start":{"line":95,"column":16},"end":{"line":95,"column":26}},"40":{"start":{"line":96,"column":30},"end":{"line":96,"column":41}},"41":{"start":{"line":100,"column":4},"end":{"line":109,"column":5}},"42":{"start":{"line":101,"column":8},"end":{"line":101,"column":45}},"43":{"start":{"line":102,"column":8},"end":{"line":102,"column":76}},"44":{"start":{"line":104,"column":8},"end":{"line":108,"column":9}},"45":{"start":{"line":105,"column":12},"end":{"line":105,"column":49}},"46":{"start":{"line":107,"column":12},"end":{"line":107,"column":58}},"47":{"start":{"line":111,"column":4},"end":{"line":122,"column":5}},"48":{"start":{"line":112,"column":8},"end":{"line":121,"column":11}},"49":{"start":{"line":114,"column":12},"end":{"line":114,"column":45}},"50":{"start":{"line":115,"column":12},"end":{"line":115,"column":73}},"51":{"start":{"line":115,"column":36},"end":{"line":115,"column":73}},"52":{"start":{"line":117,"column":12},"end":{"line":117,"column":45}},"53":{"start":{"line":118,"column":12},"end":{"line":118,"column":79}},"54":{"start":{"line":118,"column":16},"end":{"line":118,"column":21}},"55":{"start":{"line":118,"column":55},"end":{"line":118,"column":79}},"56":{"start":{"line":120,"column":12},"end":{"line":120,"column":105}},"57":{"start":{"line":120,"column":94},"end":{"line":120,"column":103}},"58":{"start":{"line":123,"column":0},"end":{"line":123,"column":1}},"59":{"start":{"line":13,"column":13},"end":{"line":123,"column":1}}},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Obj","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":37}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":4},"end":{"line":48,"column":29}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_6)","line":56,"loc":{"start":{"line":56,"column":4},"end":{"line":56,"column":22}}},"7":{"name":"(anonymous_7)","line":60,"loc":{"start":{"line":60,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_8)","line":61,"loc":{"start":{"line":61,"column":35},"end":{"line":61,"column":46}}},"9":{"name":"(anonymous_9)","line":70,"loc":{"start":{"line":70,"column":4},"end":{"line":70,"column":25}}},"10":{"name":"(anonymous_10)","line":78,"loc":{"start":{"line":78,"column":4},"end":{"line":78,"column":24}}},"11":{"name":"(anonymous_11)","line":86,"loc":{"start":{"line":86,"column":4},"end":{"line":null,"column":-1}}},"12":{"name":"(anonymous_12)","line":87,"loc":{"start":{"line":87,"column":33},"end":{"line":87,"column":49}}},"13":{"name":"(anonymous_13)","line":88,"loc":{"start":{"line":88,"column":74},"end":{"line":88,"column":89}}},"14":{"name":"(anonymous_14)","line":91,"loc":{"start":{"line":91,"column":31},"end":{"line":91,"column":53}}},"15":{"name":"(anonymous_15)","line":96,"loc":{"start":{"line":96,"column":21},"end":{"line":96,"column":25}}},"16":{"name":"(anonymous_16)","line":100,"loc":{"start":{"line":100,"column":4},"end":{"line":null,"column":-1}}},"17":{"name":"(anonymous_17)","line":111,"loc":{"start":{"line":111,"column":4},"end":{"line":null,"column":-1}}},"18":{"name":"(anonymous_18)","line":112,"loc":{"start":{"line":112,"column":33},"end":{"line":112,"column":49}}},"19":{"name":"(anonymous_19)","line":120,"loc":{"start":{"line":120,"column":88},"end":{"line":120,"column":93}}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":7}},{"start":{"line":31,"column":8},"end":{"line":31,"column":7}}]},"2":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":16},"end":{"line":89,"column":15}},{"start":{"line":89,"column":16},"end":{"line":89,"column":15}}]},"3":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":20},"end":{"line":92,"column":19}},{"start":{"line":92,"column":20},"end":{"line":92,"column":19}}]},"4":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":7}},{"start":{"line":104,"column":8},"end":{"line":104,"column":7}}]},"5":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":115,"column":11}},{"start":{"line":115,"column":12},"end":{"line":115,"column":11}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":28,"9":28,"10":26,"11":2,"12":28,"13":28,"14":28,"15":28,"16":1,"17":36,"18":1,"19":1,"20":1,"21":1,"22":5,"23":4,"24":8,"25":1,"26":2,"27":1,"28":1,"29":3,"30":2,"31":2,"32":2,"33":1,"34":1,"35":1,"36":4,"37":1,"38":3,"39":1,"40":0,"41":1,"42":4,"43":4,"44":4,"45":2,"46":2,"47":3,"48":2,"49":2,"50":2,"51":1,"52":1,"53":1,"54":7,"55":7,"56":1,"57":1,"58":1,"59":1},"b":{"1":[26,2],"2":[1,1],"3":[1,3],"4":[2,2],"5":[1,1]},"f":{"1":1,"2":28,"3":36,"4":1,"5":1,"6":1,"7":4,"8":8,"9":2,"10":1,"11":2,"12":2,"13":2,"14":4,"15":0,"16":4,"17":2,"18":2,"19":1},"code":"// import { Promise } from 'es6-promise';\nimport * as mongodb from 'mongodb';\nimport * as shortid from 'shortid';\nimport * as _ from 'lodash';\nimport * as Joi from 'joi';\n\nimport { App } from './app';\nimport { CollectionMap } from './collection_map';\nimport { ObjNotFoundError, ValidationError } from './errors';\nimport { IObj, ObjType, ObjSchemaMap } from '@threadtime/threadtime-common';\n\n// Generic object class\nexport class Obj implements IObj {\n    private app: App;\n\n    public _id: string;\n    public owner_id: string;\n    public parent_ids: string[];\n    public time: number;\n\n    private collection: mongodb.Collection;\n\n    /**\n     * Represents an Obj in Threadtime, server-side.\n     * @param app Threadtime Server App instance\n     * @param id Threadtime Obj ID\n     */\n    constructor(app: App, id?: string) {\n        this.app = app;\n\n        if(typeof id === 'string') {\n            this._id = id;\n        } else {\n            this._id = `${ObjType.Generic}${shortid.generate()}`;\n        }\n\n        this.owner_id = null;\n        this.parent_ids = [];\n        this.time = Math.floor(Date.now() / 1000);\n\n        this.collection = this.app.collectionFor(this.type);\n    }\n\n    get type(): ObjType {\n        return parseInt(this._id[0]);\n    }\n\n    set type(objType: ObjType) {\n        this._id = `${objType}${this._id.slice(1)}`;\n    }\n\n    get owner(): Obj {\n        return new Obj(this.app, this.owner_id);\n    }\n\n    set owner(obj: Obj) {\n        this.owner_id = obj._id;\n    }\n\n    get parents(): Obj[] {\n        return this.parent_ids.map((id: string) => {\n            return new Obj(this.app, id);\n        });\n    }\n\n    /**\n     * Add a parent given an Obj\n     * @param parent Parent to add to the parents list\n     */\n    addParent(parent: Obj): void {\n        this.parent_ids.push(parent._id);\n    }\n\n    /**\n     * Remove a parent given an Obj\n     * @param parent Parent to remove from the parents list\n     */\n    rmParent(parent: Obj): void {\n        _.pull(this.parent_ids, parent._id);\n    }\n\n    /** Load the document from the relevant collection in the database\n     *\n     * @returns {Promise<void>|Promise} Promise resolved when document loaded, rejected on failure\n     */\n    load(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.collection.find({_id: this._id}).limit(1).toArray().then((docs: Object[]) => {\n                if(_.isEmpty(docs)) return reject(new ObjNotFoundError());\n                let doc = docs[0];\n                _.forEach(doc, (val: any, key: string) => {\n                    if(key.charAt(0) === '_') return; // Skip properties that begin with an underscore\n                    (<any>this)[key] = val;\n                });\n                resolve();\n            }).catch((err) => reject(err));\n        });\n    }\n\n    validate(): IObjValidation {\n        let schema = ObjSchemaMap[this.type];\n        let result = Joi.validate(this, schema.joi, { allowUnknown: true });\n\n        if(result.error === null) {\n            return { success: true, error: null }\n        } else {\n            return { success: false, error: result.error }\n        }\n    }\n\n    save(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            // Validate first\n            let validation = this.validate();\n            if(!validation.success) return reject(new ValidationError()); // TODO return with validation data\n\n            let doc: {[x: string]: any} = {};\n            for(let k of ObjSchemaMap[this.type].keys) doc[k] = (<any>this)[k];\n\n            return this.collection.updateOne({_id: this._id}, doc, {upsert: true}).then(() => resolve());\n        });\n    }\n}\n\nexport interface IObjValidation {\n    success: boolean,\n    error: Joi.ValidationError\n}","l":{"3":1,"4":1,"5":1,"9":1,"10":1,"13":1,"28":1,"29":28,"31":28,"32":26,"34":2,"37":28,"38":28,"39":28,"41":28,"44":1,"45":36,"49":1,"52":1,"53":1,"57":1,"60":5,"61":4,"62":8,"70":1,"71":2,"78":1,"79":1,"86":3,"87":2,"88":2,"89":2,"90":1,"91":1,"92":4,"93":3,"95":1,"96":0,"100":1,"101":4,"102":4,"104":4,"105":2,"107":2,"111":3,"112":2,"114":2,"115":2,"117":1,"118":7,"120":1,"123":1}}}
